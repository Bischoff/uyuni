name: Javascript build

on:
  push:
    branches:
      - master
    paths:
      - 'web/html/src/**'
      - '.github/workflows/javascript-build.yml'
  pull_request:
    paths:
      - 'web/html/src/**'
      - '.github/workflows/javascript-build.yml'

jobs:
  javascript_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 #v6.0.0
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get Yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use Yarn cache
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 #v4.3.0
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    # We only install production dependencies here to simulate a situation similar to OBS/IBS
    - name: Install production dependencies
      run: yarn install --force --ignore-optional --production=true --frozen-lockfile --prefer-offline

    - name: Build application
      run: yarn build
